{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\blog\\\\client\\\\blog-app\\\\src\\\\components\\\\SinglePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SinglePost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    fetchPost();\n  }, []); // Add an empty dependency array to ensure useEffect runs only once\n\n  const fetchPost = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/posts/${id}`);\n      setPost(response.data);\n    } catch (error) {\n      console.error('Error fetching post', error);\n    }\n  };\n  const handleDeletePost = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`http://localhost:5000/api/posts/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPost(null);\n      // Navigate to home page after successful post deletion\n      navigate('/');\n    } catch (error) {\n      console.error('Error deleting post', error);\n    }\n  };\n\n  // Check if the user is the author of the post\n  const isAuthor = post && post.author._id === getUserId();\n\n  // Function to get the user ID from the token\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: post ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-4 mb-3\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-3\",\n        children: [\"Author: \", post.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), isAuthor && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeletePost,\n        className: \"btn btn-danger\",\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"8cvXmqxDQy4Y657pAi1siVd9x6Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","SinglePost","_s","id","navigate","post","setPost","fetchPost","response","get","data","error","console","handleDeletePost","token","localStorage","getItem","delete","headers","Authorization","isAuthor","author","_id","getUserId","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","username","content","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/blog/client/blog-app/src/components/SinglePost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nfunction SinglePost() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, []); // Add an empty dependency array to ensure useEffect runs only once\r\n\r\n  const fetchPost = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/posts/${id}`);\r\n      setPost(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching post', error);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.delete(`http://localhost:5000/api/posts/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      setPost(null);\r\n      // Navigate to home page after successful post deletion\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error deleting post', error);\r\n    }\r\n  };\r\n\r\n  // Check if the user is the author of the post\r\n  const isAuthor = post && post.author._id === getUserId();\r\n\r\n  // Function to get the user ID from the token\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {post ? (\r\n        <div>\r\n          <h2 className=\"mt-4 mb-3\">{post.title}</h2>\r\n          <p className=\"mb-3\">Author: {post.author.username}</p>\r\n          <p>{post.content}</p>\r\n          {isAuthor && (\r\n            <button onClick={handleDeletePost} className=\"btn btn-danger\">\r\n              Delete Post\r\n            </button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinglePost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,mCAAkCN,EAAG,EAAC,CAAC;MACzEG,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMpB,KAAK,CAACqB,MAAM,CAAE,mCAAkCd,EAAG,EAAC,EAAE;QAC1De,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASL,KAAM;QAAE;MAC9C,CAAC,CAAC;MAEFR,OAAO,CAAC,IAAI,CAAC;MACb;MACAF,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMS,QAAQ,GAAGf,IAAI,IAAIA,IAAI,CAACgB,MAAM,CAACC,GAAG,KAAKC,SAAS,CAAC,CAAC;;EAExD;;EAGA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBpB,IAAI,gBACHL,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAIwB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEpB,IAAI,CAACqB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3C9B,OAAA;QAAGwB,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,UAAQ,EAACpB,IAAI,CAACgB,MAAM,CAACU,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtD9B,OAAA;QAAAyB,QAAA,EAAIpB,IAAI,CAAC2B;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBV,QAAQ,iBACPpB,OAAA;QAAQiC,OAAO,EAAEpB,gBAAiB;QAACW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAE9D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAEN9B,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CAzDQD,UAAU;EAAA,QACFJ,SAAS,EACPC,WAAW;AAAA;AAAAoC,EAAA,GAFrBjC,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}